pipeline:
  projectIdentifier: sample
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: k3ssa
              namespace: harness-build
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: harnessDockerHub
                    image: alpine
                    shell: Sh
                    command: |-
                      cat > Dockerfile <<_EOF_
                      FROM alpine
                      ENV APP_DIR=/xyz
                      WORKDIR /src
                      RUN mkdir -p venkat
                      RUN pwd
                      _EOF_

                      pwd
                      ls
                    resources:
                      limits:
                        memory: 50Mi
                        cpu: 100m
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: harbor
                    repo: demo.goharbor.io/venkat50/demo
                    tags:
                      - <+pipeline.sequenceId>
                    context: /harness
                    resources:
                      limits:
                        memory: 100Mi
                        cpu: 100m
                    envVariables:
                      PLUGIN_NO_PUSH: "true"
                      PLUGIN_DRY_RUN: '"true"'
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  type: BuildAndPushGAR
                  name: BuildAndPushGAR_1
                  identifier: BuildAndPushGAR_1
                  spec:
                    connectorRef: gcpsales
                    host: us-east1-docker.pkg.dev
                    projectID: sales-209522
                    imageName: venkat/sample
                    tags:
                      - <+pipeline.sequenceId>
              - step:
                  type: Plugin
                  name: Plugin_1
                  identifier: Plugin_1
                  spec:
                    connectorRef: harnessDockerHub
                    image: plugins/github-actions
                    privileged: true
                    settings:
                      uses: actions/hello-world-javascript-action@v1.1
                      with:
                        who-to-greet: test
                      env:
                        hello: world
                    resources:
                      limits:
                        memory: 100Mi
                        cpu: 100m
          caching:
            enabled: false
            paths: []
        when:
          pipelineStatus: Success
    - stage:
        name: test
        identifier: test
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          environment:
            environmentRef: Dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: k3ssa
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
          condition: "false"
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: nginxk8s
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      sources:
                        - identifier: nginx
                          type: DockerRegistry
                          spec:
                            tag: <+input>
          environment:
            environmentRef: Dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: k3ssa
          execution:
            steps:
              - stepGroup:
                  name: plugin
                  identifier: plugin
                  steps:
                    - step:
                        type: Plugin
                        name: Plugin_1
                        identifier: Plugin_1
                        spec:
                          connectorRef: harnessDockerHub
                          image: plugins/github-actions
                          settings:
                            uses: actions/hello-world-javascript-action@v1.1
                            with:
                              who-to-greet: test
                            env:
                              hello: world
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: k3ssa
                      namespace: harness-demo
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
          condition: "false"
    - stage:
        name: custom
        identifier: custom
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: plugin
                  identifier: plugin
                  steps:
                    - step:
                        type: Plugin
                        name: Plugin_1
                        identifier: Plugin_1
                        spec:
                          connectorRef: harnessDockerHub
                          image: plugins/download
                          privileged: true
                          settings:
                            source: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
                            destination: awscli.zip
                        timeout: 10m
                    - step:
                        type: Run
                        name: Run_1
                        identifier: Run_1
                        spec:
                          connectorRef: harnessDockerHub
                          image: alpine
                          shell: Sh
                          command: ls -l
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: k3ssa
                      namespace: harness-demo
            rollbackSteps: []
          serviceDependencies: []
        tags: {}
        when:
          pipelineStatus: Success
          condition: "false"
  allowStageExecutions: true
  identifier: testdocker_Clone
  name: test-docker - Clone
